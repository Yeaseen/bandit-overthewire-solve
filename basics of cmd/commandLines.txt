~ == Home

$ == path end

~/Y_E_@_S_E_EN/SEU/CSE3032/Folder1$


seu@seu:~/Documents/YAT_OS/first_D$ abc=7
seu@seu:~/Documents/YAT_OS/first_D$ echo "$abc"
7


* == all files and folders in the current location 

myfiles=(*)
echo "$myfiles"
echo "{myfiles[0]}"
echo "${myfiles[0]}"





clear
pwd
ls 
ls -A  
mkdir Folder1
cd Folder1
cd ..

mkdir child number three
mkdir child\ number\ three

mkdir my tree\speaks as\ if\ Ididn

mkdir a\'b 
mkdir a\*b
mkdir a\\b

rmdir my

rm abc.txt 



mkdir a b c d e f g h i j
rmdir a b c d e f h g j i

rm -r childOfFolder1


==========*************

nano abc.txt

If you want to write something, then type what you want to write at this step. 

Press ctrl+X

Type 'y'

Press 'Enter' Button 
==========*************


mv abc.txt LocationToMove
mv full_path_of_SOURCE_FILE    full_path_where_to_move


To rename a file::
mv abc.txt superman.txt


cp abc.txt LocationToMove
cp full_path_of_SOURCE_FILE    full_path_where_to_move



cat superman.txt 

cat -n superman.txt

cat -e superman.txt 

cat -ne superman.txt



cat batman.txt superman.txt > batmanvssuperman.txt

To append something:: use '>>' 
cat wonderwoman.txt >> batmanvssuperman.txt  


To print lines from 10 to 15: sed -n '10,15p' file1.txt


To append lines from 10 to 15 of file1.txt to file.txt::
sed -n '10,15p' file1.txt >> file2.txt


* == all files in a folder 
cat *

To print the lines number:  wc -l filename
To print the words number: wc -w filename
To print the chracters number: wc -m filename
To print the bytes number: wc -c filename
wc -lwmc file name


cat filename | wc -lwmc
cat * | wc -lwmc


find . -type f  -name 'm*l.txt'
find . -type f  -iname 'p*m*l.*'

find . -type f -name "*.pdf" -exec rm -f {} \;
find . -type f -name "*.txt" -exec cat {} \; | wc -lw



-o == only matched part will be portrayed 
-i == case insensetive
-w == only for matched WORD

grep -oi 'c' batman.txt | wc -w


grep -owi 'man' batman.txt | wc -w


head -n 3 superman.txt | grep -o 'o' | wc -w

tail -n 3 superman.txt | grep -o 'o' | wc -w


{ grep -ow 'ASUS' batman.txt && grep -owi 'ASUS' superman.txt } | wc -w


Q. Find the number of the occurences of 'man' in the first seven lines of the superman.txt file.
==>  head -n 7 superman.txt | grep -o 'man' | wc -l

Q1. Write a command line that can print the frequencies of a string that starts with ‘p’ 
and ends with ‘t’ in the last 20 lines of abc.txt file and the first seven 
lines of pqr.txt file. [Use regex]

{ tail -n 20 abc.txt | grep -oi 'p*t' && head -n 7 superman.txt | grep -o 'p*t'} | wc -w



Permission::
r = read
w = write
x = execute 

Owner's Permission	 group's permission         random users' permission
     Current:    rwx rwx rwx
                  111 111 111
                  
      After:      -wx r-x ---
		  011 101 000

chmod 350 filename

      After:      rwx r-x ---
		  111 101 000

chmod 750 filename

chmod -R 744 folderName



Process Commands:

ps -ef
ps aux
ps -u seu

How many processes of 'Google Chrom' are running right now??
==>    pgrep 'chrome' | wc -w


Temporary command change for convenience:: 

seu@seu:~/Documents/YAT_OS/first_D$ alias what='ls'
seu@seu:~/Documents/YAT_OS/first_D$ what
abc.txt  pqr.txt  result.txt  Student

To make permanent change, append this command to .bashrc file on home.


Find & Replace:: sed command

$sed 's/unix/linux/' geekfile.txt

	Here the “s” specifies the substitution operation. The “/” are delimiters. The “unix” is the search pattern and the “linux” is the replacement string.

	By default, the sed command replaces the first occurrence of the pattern in each line and it won’t replace the second, third…occurrence in the line.

for 2nd occurence:: nth occurence
sed 's/unix/linux/2' geekfile.txt

for global replacement::

sed 's/unix/linux/g' geekfile.txt

Replacing string on a specific line number :
sed '3 s/unix/linux/' geekfile.txt

Replacing string on a range of lines :
sed '1,3 s/unix/linux/' geekfile.txt

sed '2,$ s/unix/linux/' geekfile.txt
	Here $ indicates the last line in the file.


Delete a specific line: sed '5d' filename.txt

To Delete a last line: sed '$d' filename.txt

To Delete line from range x to y: sed '3,6d' filename.txt   

To Delete from nth to last line: sed '12,$d' filename.txt

To delete pattern matching line: sed '/abc/d' filename.txt

